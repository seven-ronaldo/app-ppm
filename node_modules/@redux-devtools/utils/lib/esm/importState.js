import jsan from 'jsan';
import { immutableSerialize } from '@redux-devtools/serialize';
export function importState(state, _ref) {
  let {
    serialize
  } = _ref;
  if (!state) return undefined;
  let parse = jsan.parse;
  if (serialize) {
    if (serialize.immutable) {
      parse = v => jsan.parse(v, immutableSerialize(serialize.immutable, serialize.refs).reviver);
    } else if (serialize.reviver) {
      parse = v => jsan.parse(v, serialize.reviver);
    }
  }
  let preloadedState;
  let nextLiftedState = parse(state);
  if (nextLiftedState.payload) {
    if (nextLiftedState.preloadedState) preloadedState = parse(nextLiftedState.preloadedState);
    nextLiftedState = parse(nextLiftedState.payload);
  }
  return {
    nextLiftedState,
    preloadedState
  };
}